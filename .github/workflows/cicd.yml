name: Tests CI Pipeline

on:
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 11:00 –ø–æ –ú–°–ö (08:00 UTC)
    - cron: '0 8 * * *'
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: '–û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        required: true
        default: 'prod'
        type: choice
        options: [prod, dev]
      run_type:
        description: '–¢–∏–ø –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤'
        required: false
        default: 'regression'
        type: choice
        options: [smoke, regression, full]

env:
  ALLURE_REPORT_DIR: "allure-report"
  ALLURE_RESULTS_DIR: "allure-results"
  PROD_BASE_URL: "https://virtualtours.qbd.ae/map"
  DEV_BASE_URL: "https://qube-dev-next.evometa.io/map"
  DEV_AGENT_BASE_URL: "https://qube-dev-next.evometa.io/agent/map"
  DEV_CLIENT_BASE_URL: "https://qube-dev-next.evometa.io/client/map"
  AGENT_PROD_BASE_URL: "https://virtualtours.qbd.ae/agent/map"
  CLIENT_PROD_BASE_URL: "https://virtualtours.qbd.ae/client/map"

jobs:
  ubuntu-firefox:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright
          python -m playwright install firefox
          python -m playwright install-deps

      - name: Create environment properties
        run: |
          mkdir -p ${{ env.ALLURE_RESULTS_DIR }}
          
          ENV="${{ github.event.inputs.environment || 'prod' }}"
          if [ "$ENV" = "prod" ]; then
            URL="${{ env.PROD_BASE_URL }}"
          else
            URL="${{ env.DEV_BASE_URL }}"
          fi
          
          cat > ${{ env.ALLURE_RESULTS_DIR }}/environment.properties << EOF
          # Test Environment Configuration
          environment = $ENV
          url = $URL
          browser = firefox
          EOF
        env:
          TEST_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}

      - name: Run tests (Firefox/Linux)
        run: pytest --browser=firefox -m smoke --alluredir=${{ env.ALLURE_RESULTS_DIR }}
        env:
          TEST_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-ubuntu-firefox
          path: ${{ env.ALLURE_RESULTS_DIR }}

  windows-chromium:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: pwsh
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright
          python -m playwright install chromium
          python -m playwright install-deps

      - name: Create environment properties
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path ${{ env.ALLURE_RESULTS_DIR }}
          
          $env = "${{ github.event.inputs.environment || 'prod' }}"
          if ($env -eq "prod") {
            $url = "${{ env.PROD_BASE_URL }}"
          } else {
            $url = "${{ env.DEV_BASE_URL }}"
          }
          
          @"
          # Test Environment Configuration
          environment = $env
          url = $url
          browser = chromium
          "@ | Out-File -FilePath "${{ env.ALLURE_RESULTS_DIR }}/environment.properties" -Encoding UTF8
        env:
          TEST_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}

      - name: Run tests (Chromium/Windows)
        shell: pwsh
        run: pytest --browser=chromium -m smoke --alluredir=${{ env.ALLURE_RESULTS_DIR }}
        env:
          TEST_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-windows-chromium
          path: ${{ env.ALLURE_RESULTS_DIR }}

  macos-webkit:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright
          python -m playwright install webkit
          python -m playwright install-deps
          brew install allure

      - name: Create environment properties
        run: |
          mkdir -p ${{ env.ALLURE_RESULTS_DIR }}
          
          ENV="${{ github.event.inputs.environment || 'prod' }}"
          if [ "$ENV" = "prod" ]; then
            URL="${{ env.PROD_BASE_URL }}"
          else
            URL="${{ env.DEV_BASE_URL }}"
          fi
          
          cat > ${{ env.ALLURE_RESULTS_DIR }}/environment.properties << EOF
          # Test Environment Configuration
          environment = $ENV
          url = $URL
          browser = webkit
          EOF
        env:
          TEST_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}

      - name: Run tests (Webkit/macOS)
        run: pytest --browser=webkit -m smoke --alluredir=${{ env.ALLURE_RESULTS_DIR }}
        env:
          TEST_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-macos-webkit
          path: ${{ env.ALLURE_RESULTS_DIR }}

  deploy-allure:
    runs-on: ubuntu-latest
    needs: [ubuntu-firefox, windows-chromium, macos-webkit]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download results
        uses: actions/download-artifact@v4
        with:
          path: allure-results
          pattern: allure-results-*
          merge-multiple: true



      - name: Install Allure
        run: |
          curl -Ls https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz -o allure.tgz
          sudo tar -zxvf allure.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure

      - name: Download previous history
        run: |
          mkdir -p old-history
          echo "üîç –ó–∞–≥—Ä—É–∂–∞–µ–º history.zip –∏–∑ GitHub Pages..."
          
          curl -s -L -f "https://${{ github.repository_owner }}.github.io/catalog_autotests/allure-report/history.zip" -o history.zip || {
            echo "‚ÑπÔ∏è History.zip –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π"
            rm -f history.zip
          }

          if [ -f history.zip ] && [ -s history.zip ]; then
            echo "‚úÖ History.zip –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ..."
            if file history.zip | grep -q "Zip archive"; then
              echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º history.zip..."
              unzip -q history.zip -d old-history
              echo "‚úÖ History —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω"
            else
              echo "‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è zip –∞—Ä—Ö–∏–≤–æ–º, —É–¥–∞–ª—è–µ–º"
              rm -f history.zip
            fi
          else
            echo "‚ÑπÔ∏è History –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π"
          fi

      - name: Generate Allure report with history
        run: |
          echo "üîß –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞..."
          mkdir -p combined-results
          
          # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
          find allure-results -type f -exec cp {} combined-results/ \;
          echo "‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"

          # –î–æ–±–∞–≤–ª—è–µ–º history –µ—Å–ª–∏ –µ—Å—Ç—å
          if [ -d old-history/history ]; then
            echo "üìö –ö–æ–ø–∏—Ä—É–µ–º history..."
            cp -r old-history/history combined-results/
            echo "‚úÖ History –¥–æ–±–∞–≤–ª–µ–Ω"
          else
            echo "‚ÑπÔ∏è History –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π"
          fi

          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
          echo "üìä –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Allure –æ—Ç—á–µ—Ç..."
          allure generate combined-results --clean -o ${{ env.ALLURE_REPORT_DIR }}
          echo "‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"

          # –°–æ–∑–¥–∞–µ–º history.zip –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
          cd ${{ env.ALLURE_REPORT_DIR }}
          if [ -d history ]; then
            echo "üì¶ –°–æ–∑–¥–∞–µ–º history.zip..."
            zip -r ../../history.zip history/
            echo "‚úÖ History.zip —Å–æ–∑–¥–∞–Ω"
          else
            echo "‚ö†Ô∏è –ü–∞–ø–∫–∞ history –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, history.zip –Ω–µ —Å–æ–∑–¥–∞–Ω"
          fi
          cd ../..

      - name: Deploy Allure to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main' || github.event_name == 'schedule' || github.event_name == 'pull_request'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: allure-report



  notify:
    runs-on: ubuntu-latest
    needs: [ubuntu-firefox, windows-chromium, macos-webkit, deploy-allure]
    if: always() && (github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' || github.event_name == 'pull_request')
    steps:
      - name: Send Telegram summary
        uses: appleboy/telegram-action@v1.0.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ <b>–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ç–µ—Å—Ç–∞–º</b>

            –ü—Ä–æ–µ–∫—Ç: ${{ github.repository }}
            –í–µ—Ç–∫–∞: ${{ github.ref_name }}
            –û–∫—Ä—É–∂–µ–Ω–∏–µ: ${{ github.event.inputs.environment || 'prod' }}
            –¢–∏–ø –∑–∞–ø—É—Å–∫–∞: ${{ github.event.inputs.run_type || (github.event_name == 'schedule' && 'scheduled') || 'regression' }}

            –°—Ç–∞—Ç—É—Å: ${{ (needs.ubuntu-firefox.result == 'success' && needs.windows-chromium.result == 'success' && needs.macos-webkit.result == 'success') && '‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏' || '‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏' }}

            üìä –û—Ç—á–µ—Ç: <a href="https://${{ github.repository_owner }}.github.io/catalog_autotests/allure-report/">Allure</a>
            üîó Actions: <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">GH Actions</a>
          format: html
          disable_web_page_preview: true