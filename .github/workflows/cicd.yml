name: Tests CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: '–û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        required: true
        default: 'prod'
        type: choice
        options: [prod, dev]
      run_type:
        description: '–¢–∏–ø –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤'
        required: false
        default: 'regression'
        type: choice
        options: [smoke, regression, full]

env:
  ALLURE_REPORT_DIR: "allure-report"
  ALLURE_RESULTS_DIR: "allure-results"
  PROD_BASE_URL: "https://virtualtours.qbd.ae/map"
  DEV_BASE_URL: "https://qube-dev-next.evometa.io/map"

jobs:
  ubuntu-firefox:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright
          python -m playwright install firefox
          python -m playwright install-deps

      - name: Run tests (Firefox/Linux)
        run: pytest --browser=firefox --alluredir=${{ env.ALLURE_RESULTS_DIR }}
        env:
          BASE_URL: ${{ github.event.inputs.environment == 'prod' && env.PROD_BASE_URL || env.DEV_BASE_URL }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-ubuntu-firefox
          path: ${{ env.ALLURE_RESULTS_DIR }}

  windows-chromium:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: pwsh
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright
          python -m playwright install chromium
          python -m playwright install-deps

      - name: Run tests (Chromium/Windows)
        shell: pwsh
        run: pytest --browser=chromium --alluredir=${{ env.ALLURE_RESULTS_DIR }}
        env:
          BASE_URL: ${{ github.event.inputs.environment == 'prod' && env.PROD_BASE_URL || env.DEV_BASE_URL }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-windows-chromium
          path: ${{ env.ALLURE_RESULTS_DIR }}

  macos-webkit:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright
          python -m playwright install webkit
          python -m playwright install-deps
          brew install allure

      - name: Run tests (Webkit/macOS)
        run: pytest --browser=webkit --alluredir=${{ env.ALLURE_RESULTS_DIR }}
        env:
          BASE_URL: ${{ github.event.inputs.environment == 'prod' && env.PROD_BASE_URL || env.DEV_BASE_URL }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-macos-webkit
          path: ${{ env.ALLURE_RESULTS_DIR }}

  deploy-allure:
    runs-on: ubuntu-latest
    needs: [ubuntu-firefox, windows-chromium, macos-webkit]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Download results
        uses: actions/download-artifact@v4
        with:
          path: allure-results

      - name: Install Allure
        run: |
          curl -Ls https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz -o allure.tgz
          sudo tar -zxvf allure.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure

      - name: Download previous history
        run: |
          mkdir -p old-history
          curl -s -L https://evometaio.github.io/catalog_autotests/allure-report/history.zip -o history.zip || true

          if [ -s history.zip ] && file history.zip | grep -q "Zip archive"; then
            echo "Found valid history.zip, extracting..."
            unzip -q history.zip -d old-history
          else
            echo "No valid history found, skipping"
            rm -f history.zip
          fi

      - name: Generate Allure report with history
        run: |
          mkdir -p combined-results
          find allure-results -type f -exec cp {} combined-results/ \;

          if [ -d old-history/history ]; then
            echo "Merging history..."
            cp -r old-history/history combined-results/
          fi

          allure generate combined-results --clean -o ${{ env.ALLURE_REPORT_DIR }}

          cd ${{ env.ALLURE_REPORT_DIR }}
          zip -r ../../history.zip history/ || echo "No history"
          cd ../..

      - name: Deploy Allure to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: allure-report

      - name: Upload history for next run
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-history
          path: history.zip
          retention-days: 30

  notify:
    runs-on: ubuntu-latest
    needs: [ubuntu-firefox, windows-chromium, macos-webkit, deploy-allure]
    if: always()
    steps:
      - name: Send Telegram summary
        uses: appleboy/telegram-action@v1.0.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ç–µ—Å—Ç–∞–º

            –ü—Ä–æ–µ–∫—Ç: ${{ github.repository }}
            –í–µ—Ç–∫–∞: ${{ github.ref_name }}
            –û–∫—Ä—É–∂–µ–Ω–∏–µ: ${{ github.event.inputs.environment || 'prod' }}
            –¢–∏–ø –∑–∞–ø—É—Å–∫–∞: ${{ github.event.inputs.run_type || 'regression' }}

            –°—Ç–∞—Ç—É—Å: ${{ (needs.ubuntu-firefox.result == 'success' && needs.windows-chromium.result == 'success' && needs.macos-webkit.result == 'success') && '‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏' || '‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏' }}

            üìä –û—Ç—á–µ—Ç: https://${{ github.repository_owner }}.github.io/catalog_autotests/
            üìä –û—Ç—á–µ—Ç: https://${{ github.repository_owner }}.github.io/catalog_autotests/allure-report/
            üîó Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          format: html
          disable_web_page_preview: true