name: Tests CI Pipeline

on:
  push:
    branches: [main, develop, feature/*, bugfix/*, hotfix/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: '–û–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        required: true
        default: 'prod'
        type: choice
        options:
        - prod
        - dev
      browsers:
        description: '–ë—Ä–∞—É–∑–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        required: false
        default: 'default'
        type: choice
        options:
        - default
        - all
      run_type:
        description: '–¢–∏–ø –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤'
        required: false
        default: 'regression'
        type: choice
        options:
        - smoke
        - regression
        - full

env:
  ALLURE_REPORT_DIR: "allure-report"
  ALLURE_RESULTS_DIR: "allure-results"
  PROD_BASE_URL: "https://virtualtours.qbd.ae/map"
  DEV_BASE_URL: "https://qube-dev-next.evometa.io/map"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    outputs:
      os: ${{ matrix.os }}
      browser: ${{ matrix.browser }}
      browser_name: ${{ matrix.browser_name }}
      status: ${{ job.status }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            browser: firefox
            browser_name: "Firefox"
          - os: windows-latest
            browser: chromium
            browser_name: "Chrome"
          - os: macos-latest
            browser: webkit
            browser_name: "Safari"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest pytest-playwright

      - name: Install Playwright browsers
        run: |
          python -m playwright install ${{ matrix.browser }}
          python -m playwright install-deps

      - name: Install Allure (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          curl -o allure-2.27.0.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure

      - name: Install Allure (macOS)
        if: runner.os == 'macOS'
        run: brew install allure

      - name: Install Java (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: choco install openjdk --version=17 -y

      - name: Install Allure (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $allureVersion = "2.27.0"
          $allureUrl = "https://github.com/allure-framework/allure2/releases/download/$allureVersion/allure-$allureVersion.tgz"
          $allureArchive = "$env:TEMP\allure-$allureVersion.tgz"

          Invoke-WebRequest -Uri $allureUrl -OutFile $allureArchive
          tar -xzf $allureArchive -C C:\
          $allureDir = "C:\allure-$allureVersion"
          echo "$allureDir\bin" >> $env:GITHUB_PATH
          Remove-Item $allureArchive -Force

      - name: Run tests
        run: |
          pytest --browser=${{ matrix.browser }} --alluredir=${{ env.ALLURE_RESULTS_DIR }} --maxfail=0 --tb=short --continue-on-collection-errors
        env:
          BASE_URL: ${{ github.event.inputs.environment == 'prod' && env.PROD_BASE_URL || env.DEV_BASE_URL || env.PROD_BASE_URL }}

      - name: Generate Allure report (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if command -v allure &> /dev/null; then
            allure generate ${{ env.ALLURE_RESULTS_DIR }} --clean -o ${{ env.ALLURE_REPORT_DIR }}
          else
            echo "Allure not found, skipping report generation"
            exit 0
          fi

      - name: Generate Allure report (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          try {
            allure generate ${{ env.ALLURE_RESULTS_DIR }} --clean -o ${{ env.ALLURE_REPORT_DIR }}
          } catch {
            Write-Host "Allure not found, skipping report generation"
            exit 0
          }

      - name: Ensure summary.json exists (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p "${{ env.ALLURE_REPORT_DIR }}/widgets"
          if [ ! -f "${{ env.ALLURE_REPORT_DIR }}/widgets/summary.json" ]; then
            echo '{"statistic":{"total":0,"passed":0,"failed":0,"skipped":0,"broken":0,"canceled":0}}' > "${{ env.ALLURE_REPORT_DIR }}/widgets/summary.json"
          fi

      - name: Ensure summary.json exists (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "${{ env.ALLURE_REPORT_DIR }}/widgets"
          if (-not (Test-Path "${{ env.ALLURE_REPORT_DIR }}/widgets/summary.json")) {
            '{"statistic":{"total":0,"passed":0,"failed":0,"skipped":0,"broken":0,"canceled":0}}' | Out-File -FilePath "${{ env.ALLURE_REPORT_DIR }}/widgets/summary.json" -Encoding UTF8
          }

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.os }}-${{ matrix.browser }}
          path: ${{ env.ALLURE_RESULTS_DIR }}
          retention-days: 30

  deploy-report:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          path: allure-results

      - name: Download previous report from GitHub Pages
        run: |
          # –°–∫–∞—á–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç—á–µ—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "Downloading previous report from GitHub Pages..."
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞
            mkdir -p allure-report-old
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–∫–∞—á–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç—á–µ—Ç (–º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
            curl -f -L "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report/" -o /tmp/previous-report.html 2>/dev/null || echo "No previous report found"
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç—á–µ—Ç, —Å–∫–∞—á–∏–≤–∞–µ–º –µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if [ -f "/tmp/previous-report.html" ]; then
              echo "Previous report found, downloading results..."
              # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
              # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏
              echo '{"statistic":{"total":0,"passed":0,"failed":0,"skipped":0,"broken":0,"canceled":0}}' > allure-report-old/summary.json
            fi
          fi

      - name: Generate Allure report
        run: |
          # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Allure
          curl -o allure-2.27.0.tgz -Ls https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure
          
          # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
          if [ -d "allure-report" ]; then
            echo "Previous report found, preserving history..."
            # –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç—á–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É
            cp -r allure-report allure-report-old
          fi
          
          # –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Å–µ—Ö job'–æ–≤
          mkdir -p combined-results
          find allure-results -name "*.json" -exec cp {} combined-results/ \;
          find allure-results -name "*.xml" -exec cp {} combined-results/ \;
          
          # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç—á–µ—Ç, –∫–æ–ø–∏—Ä—É–µ–º –µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
          if [ -d "allure-report-old" ]; then
            echo "Merging with previous results..."
            find allure-report-old -name "*.json" -exec cp {} combined-results/ \;
            find allure-report-old -name "*.xml" -exec cp {} combined-results/ \;
          fi
          
          # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π
          allure generate combined-results --clean -o allure-report
          
          # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          rm -rf allure-report-old combined-results

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          destination_dir: allure-report


  send-summary:
    runs-on: ubuntu-latest
    needs: [test, deploy-report]
    if: always()
    steps:
      - name: Generate and send Telegram summary
        uses: appleboy/telegram-action@v1.0.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            <b>üöÄ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ç–µ—Å—Ç–∞–º</b>
            
            <b>–ü—Ä–æ–µ–∫—Ç:</b> ${{ github.repository }}
            <b>–í–µ—Ç–∫–∞:</b> ${{ github.ref_name }}
            <b>–û–∫—Ä—É–∂–µ–Ω–∏–µ:</b> ${{ github.event.inputs.environment || 'prod' }}
            <b>–¢–∏–ø –∑–∞–ø—É—Å–∫–∞:</b> ${{ github.event.inputs.run_type || 'regression' }}
            
            <b>–°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤:</b> ${{ needs.test.result == 'success' && '‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏' || '‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏' }}
            
            <b>–î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø–æ –û–° –∏ –±—Ä–∞—É–∑–µ—Ä–∞–º:</b>
            <code>‚îÇ</code> ‚Ä¢ Ubuntu + Firefox: ${{ needs.test.outputs.status == 'success' && '‚úÖ' || '‚ùå' }}
            <code>‚îÇ</code> ‚Ä¢ Windows + Chrome: ${{ needs.test.outputs.status == 'success' && '‚úÖ' || '‚ùå' }}
            <code>‚îÇ</code> ‚Ä¢ macOS + Safari: ${{ needs.test.outputs.status == 'success' && '‚úÖ' || '‚ùå' }}
            
            <b>–°—Å—ã–ª–∫–∞ –Ω–∞ Allure –æ—Ç—á–µ—Ç:</b> <a href="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}">üìä –û—Ç—á–µ—Ç</a>
            <b>–°—Å—ã–ª–∫–∞ –Ω–∞ Actions:</b> <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">GitHub Actions</a>
          format: html
          disable_web_page_preview: true
