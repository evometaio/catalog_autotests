.PHONY: help install setup test clean report check-deps check-env format lint

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
PYTEST = pytest
ALLURE = allure
BLACK = black
ISORT = isort
FLAKE8 = flake8

# –¶–≤–µ—Ç–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
BLUE = \033[0;34m
NC = \033[0m

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)üöÄ Autotests - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

check-deps: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@which $(PYTHON) > /dev/null || (echo "$(RED)‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)" && exit 1)
	@which $(PIP) > /dev/null || (echo "$(RED)‚ùå pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)" && exit 1)
	@test -f requirements.txt || (echo "$(RED)‚ùå requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω$(NC)" && exit 1)
	@echo "$(GREEN)‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã$(NC)"

check-env: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...$(NC)"
	@test -f .env || (echo "$(YELLOW)‚ö†Ô∏è .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é$(NC)")
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

install: check-deps ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	$(PIP) install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

setup: install ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
	@echo "$(GREEN)‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...$(NC)"
	playwright install
	@echo "$(GREEN)‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test-%: check-env ## –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (test-dev, test-prod)
	@echo "$(GREEN)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–∞ $(subst test-,,$@)...$(NC)"
	TEST_ENVIRONMENT=$(subst test-,,$@) $(PYTEST) tests/ui/ -sv --browser=chromium --alluredir=reports/allure-results || true

test-head-%: check-env ## –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ head —Ä–µ–∂–∏–º–µ (test-head-dev, test-head-prod)
	@echo "$(GREEN)üëÅÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ head —Ä–µ–∂–∏–º–µ –Ω–∞ $(subst test-head-,,$@)...$(NC)"
	TEST_ENVIRONMENT=$(subst test-head-,,$@) HEADLESS=false $(PYTEST) tests/ui/ -sv --alluredir=reports/allure-results || true

test-ui: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ UI —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üñ•Ô∏è –ó–∞–ø—É—Å–∫ UI —Ç–µ—Å—Ç–æ–≤...$(NC)"
	$(PYTEST) tests/ui/ -sv --alluredir=reports/allure-results || true

test-api: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ API —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üîå –ó–∞–ø—É—Å–∫ API —Ç–µ—Å—Ç–æ–≤...$(NC)"
	$(PYTEST) tests/api/ -sv --alluredir=reports/allure-results || true

test-mobile-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –º–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üì± –ó–∞–ø—É—Å–∫ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	TEST_ENVIRONMENT=dev HEADLESS=false $(PYTEST) tests/ui/mobile/ -sv -m "mobile" --alluredir=reports/allure-results || true
test-mobile-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –º–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)üì± –ó–∞–ø—É—Å–∫ –º–æ–±–∏–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	TEST_ENVIRONMENT=prod $(PYTEST) tests/ui/mobile/ -sv -m "mobile" --alluredir=reports/allure-results || true


# –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
regress-dev: ## –ü–æ–ª–Ω–æ–µ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ dev (–≤—Å–µ –±—Ä–∞—É–∑–µ—Ä—ã + –º–æ–±–∏–ª—å–Ω—ã–µ)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ DEV...$(NC)"
	@echo "$(YELLOW)üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Chromium...$(NC)"
	TEST_ENVIRONMENT=dev $(PYTEST) tests/ui/ -sv --browser=chromium --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Firefox...$(NC)"
	TEST_ENVIRONMENT=dev $(PYTEST) tests/ui/ -sv --browser=firefox --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ WebKit...$(NC)"
	TEST_ENVIRONMENT=dev $(PYTEST) tests/ui/ -sv --browser=webkit --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ iPhone...$(NC)"
	TEST_ENVIRONMENT=dev $(PYTEST) tests/ui/mobile/ -sv -m "mobile" --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Android...$(NC)"
	TEST_ENVIRONMENT=dev $(PYTEST) tests/ui/mobile/ -sv --alluredir=reports/allure-results || true
	@echo "$(GREEN)‚úÖ –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ DEV –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"
	@echo "$(YELLOW)üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...$(NC)"
	$(ALLURE) generate reports/allure-results -o reports/allure-report --clean || true


regress-prod: ## –ü–æ–ª–Ω–æ–µ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ prod (–≤—Å–µ –±—Ä–∞—É–∑–µ—Ä—ã + –º–æ–±–∏–ª—å–Ω—ã–µ)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ PROD...$(NC)"
	@echo "$(YELLOW)üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Chromium...$(NC)"
	TEST_ENVIRONMENT=prod $(PYTEST) tests/ui/ -sv --browser=chromium --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Firefox...$(NC)"
	TEST_ENVIRONMENT=prod $(PYTEST) tests/ui/ -sv --browser=firefox --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ WebKit...$(NC)"
	TEST_ENVIRONMENT=prod $(PYTEST) tests/ui/ -sv --browser=webkit --alluredir=reports/allure-results || true
	@echo "$(YELLOW)üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ$(NC)"
	TEST_ENVIRONMENT=prod $(PYTEST) tests/ui/mobile/ -sv -m "mobile" --alluredir=reports/allure-results || true
	@echo "$(GREEN)‚úÖ –†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ PROD –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"
	@echo "$(YELLOW)üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...$(NC)"
	$(ALLURE) generate reports/allure-results -o reports/allure-report --clean || true


# –û—Ç—á–µ—Ç—ã
report: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç
	@echo "$(GREEN)üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞...$(NC)"
	$(ALLURE) generate reports/allure-results -o reports/allure-report --clean || true

serve: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Å –æ—Ç—á–µ—Ç–æ–º
	@echo "$(GREEN)üåê –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Å –æ—Ç—á–µ—Ç–æ–º...$(NC)"
	@echo "$(YELLOW)üìç –û—Ç—á–µ—Ç: http://localhost:8080$(NC)"
	$(ALLURE) serve reports/allure-results

# –û—á–∏—Å—Ç–∫–∞
clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(GREEN)üßπ –û—á–∏—Å—Ç–∫–∞...$(NC)"
	rm -rf reports/ logs/ .pytest_cache/ __pycache__/
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type f -name "*.pyc" -delete 2>/dev/null || true
	find . -type d -name "reports" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name "allure-results" -exec rm -rf {} + 2>/dev/null || true
	find . -type d -name "screenshots" -exec rm -rf {} + 2>/dev/null || true

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ª–∏–Ω—Ç–∏–Ω–≥
format: ## –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å –∫–æ–¥ (Black + isort)
	@echo "$(GREEN)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	$(BLACK) .
	$(ISORT) .
	@echo "$(GREEN)‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!$(NC)"

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏...$(NC)"
	$(FLAKE8) . --count --select=E9,F63,F7,F82 --show-source --statistics
	$(FLAKE8) . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
	@echo "$(GREEN)‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"

format-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞...$(NC)"
	$(BLACK) . --check
	$(ISORT) . --check-only
	@echo "$(GREEN)‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!$(NC)"