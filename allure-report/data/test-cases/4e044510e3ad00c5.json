{"uid":"4e044510e3ad00c5","name":"test_full_navigation_cycle_on_map[firefox-elire]","fullName":"tests.ui.qube.test_qube_map_projects.TestQubeMapProjects#test_full_navigation_cycle_on_map","historyId":"0193c0d33113d7a7277c44289aff622f","time":{"start":1757146098103,"stop":1757146134573,"duration":36470},"description":"Тест полного цикла навигации: карта -> проект -> карта.","descriptionHtml":"<p>Тест полного цикла навигации: карта -&gt; проект -&gt; карта.</p>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.","statusTrace":"self = <test_qube_map_projects.TestQubeMapProjects object at 0x7fcd68d3e510>\nmain_page = <pages.base_page.BasePage object at 0x7fcd67a61810>\nproject_name = 'elire'\n\n    @allure.story(\"Полный цикл навигации по проектам QUBE\")\n    @pytest.mark.regression\n    @pytest.mark.smoke\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\"project_name\", [\"elire\", \"arisha\", \"cubix\"])\n    def test_full_navigation_cycle_on_map(self, main_page, project_name):\n        \"\"\"Тест полного цикла навигации: карта -> проект -> карта.\"\"\"\n        with allure.step(f\"Открываем страницу карты {project_name}\"):\n            main_page.open(route_type=\"map\")\n            main_page.check_map_loaded()\n            main_page.check_project_info_visible(project_name)\n    \n        with allure.step(f\"Тестируем навигацию для проекта {project_name.upper()}\"):\n            # Открываем проект\n>           main_page.open_project_page(project_name)\n\ntests/ui/qube/test_qube_map_projects.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.base_page.BasePage object at 0x7fcd67a61810>\nproject_name = 'elire'\n\n    def open_project_page(self, project_name: str):\n        \"\"\"Открыть страницу проекта.\"\"\"\n        # Находим проект по имени\n        project = None\n        for p in QubePageLocators.ALL_PROJECTS:\n            if p.PROJECT_NAME == project_name.lower():\n                project = p\n                break\n    \n        if not project:\n            available_projects = [p.PROJECT_NAME for p in QubePageLocators.ALL_PROJECTS]\n            raise ValueError(\n                f\"Неизвестный проект Qube: {project_name}. Доступные: {available_projects}\"\n            )\n    \n        project_url = self.project_url_template.format(project=project.PROJECT_NAME)\n        self.page.goto(project_url)\n>       self.wait_for_page_load()\n\npages/base_page.py:217: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.base_page.BasePage object at 0x7fcd67a61810>\n\n    def wait_for_page_load(self):\n        \"\"\"Ожидать загрузки страницы.\"\"\"\n>       self.page.wait_for_load_state(\"networkidle\")\n\npages/base_page.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle'\n\n    def wait_for_load_state(\n        self,\n        state: typing.Optional[\n            Literal[\"domcontentloaded\", \"load\", \"networkidle\"]\n        ] = None,\n        *,\n        timeout: typing.Optional[float] = None,\n    ) -> None:\n        \"\"\"Page.wait_for_load_state\n    \n        Returns when the required load state has been reached.\n    \n        This resolves when the page reaches a required load state, `load` by default. The navigation must have been\n        committed when this method is called. If current document has already reached the required state, resolves\n        immediately.\n    \n        **NOTE** Most of the time, this method is not needed because Playwright\n        [auto-waits before every action](https://playwright.dev/python/docs/actionability).\n    \n        **Usage**\n    \n        ```py\n        page.get_by_role(\\\"button\\\").click() # click triggers navigation.\n        page.wait_for_load_state() # the promise resolves after \\\"load\\\" event.\n        ```\n    \n        ```py\n        with page.expect_popup() as page_info:\n            page.get_by_role(\\\"button\\\").click() # click triggers a popup.\n        popup = page_info.value\n        # Wait for the \\\"DOMContentLoaded\\\" event.\n        popup.wait_for_load_state(\\\"domcontentloaded\\\")\n        print(popup.title()) # popup is ready to use.\n        ```\n    \n        Parameters\n        ----------\n        state : Union[\"domcontentloaded\", \"load\", \"networkidle\", None]\n            Optional load state to wait for, defaults to `load`. If the state has been already reached while loading current\n            document, the method resolves immediately. Can be one of:\n            - `'load'` - wait for the `load` event to be fired.\n            - `'domcontentloaded'` - wait for the `DOMContentLoaded` event to be fired.\n            - `'networkidle'` - **DISCOURAGED** wait until there are no network connections for at least `500` ms. Don't use\n              this method for testing, rely on web assertions to assess readiness instead.\n        timeout : Union[float, None]\n            Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The default value can\n            be changed by using the `browser_context.set_default_navigation_timeout()`,\n            `browser_context.set_default_timeout()`, `page.set_default_navigation_timeout()` or\n            `page.set_default_timeout()` methods.\n        \"\"\"\n    \n        return mapping.from_maybe_impl(\n>           self._sync(self._impl_obj.wait_for_load_state(state=state, timeout=timeout))\n        )\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:9117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle', timeout = None\n\n    async def wait_for_load_state(\n        self,\n        state: Literal[\"domcontentloaded\", \"load\", \"networkidle\"] = None,\n        timeout: float = None,\n    ) -> None:\n>       return await self._main_frame.wait_for_load_state(**locals_to_params(locals()))\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_page.py:576: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle', timeout = None\n\n    async def wait_for_load_state(\n        self,\n        state: Literal[\"domcontentloaded\", \"load\", \"networkidle\"] = None,\n        timeout: float = None,\n    ) -> None:\n>       return await self._wait_for_load_state_impl(state, timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:273: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle', timeout = None\n\n    async def _wait_for_load_state_impl(\n        self, state: DocumentLoadState = None, timeout: float = None\n    ) -> None:\n        if not state:\n            state = \"load\"\n        if state not in (\"load\", \"domcontentloaded\", \"networkidle\", \"commit\"):\n            raise Error(\n                \"state: expected one of (load|domcontentloaded|networkidle|commit)\"\n            )\n        waiter = self._setup_navigation_waiter(\"wait_for_load_state\", timeout)\n    \n        if state in self._load_states:\n            waiter.log(f'  not waiting, \"{state}\" event already fired')\n            # TODO: align with upstream\n            waiter._fulfill(None)\n        else:\n    \n            def handle_load_state_event(actual_state: str) -> bool:\n                waiter.log(f'\"{actual_state}\" event fired')\n                return actual_state == state\n    \n            waiter.wait_for_event(\n                self._event_emitter,\n                \"loadstate\",\n                handle_load_state_event,\n            )\n>       await waiter.result()\nE       playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:301: TimeoutError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757146029989,"stop":1757146030050,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_environment","time":{"start":1757146030050,"stop":1757146030051,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1757146030050,"stop":1757146030050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1757146030050,"stop":1757146030050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1757146030050,"stop":1757146030050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1757146030050,"stop":1757146030050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright","time":{"start":1757146030051,"stop":1757146030347,"duration":296},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"launch_browser","time":{"start":1757146030347,"stop":1757146030347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type","time":{"start":1757146030347,"stop":1757146030347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_type_launch_args","time":{"start":1757146030347,"stop":1757146030347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"connect_options","time":{"start":1757146030347,"stop":1757146030347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1757146030347,"stop":1757146030859,"duration":512},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1757146030860,"stop":1757146030860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1757146030860,"stop":1757146030860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser_context_args","time":{"start":1757146030860,"stop":1757146030860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder","time":{"start":1757146030860,"stop":1757146030860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"new_context","time":{"start":1757146097913,"stop":1757146097913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder","time":{"start":1757146097913,"stop":1757146097913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"output_path","time":{"start":1757146097913,"stop":1757146097913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"context","time":{"start":1757146097914,"stop":1757146097927,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"page","time":{"start":1757146097927,"stop":1757146098102,"duration":175},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test_parameters","time":{"start":1757146098102,"stop":1757146098102,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"main_page","time":{"start":1757146098102,"stop":1757146098102,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Тест полного цикла навигации: карта -> проект -> карта.","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.","statusTrace":"self = <test_qube_map_projects.TestQubeMapProjects object at 0x7fcd68d3e510>\nmain_page = <pages.base_page.BasePage object at 0x7fcd67a61810>\nproject_name = 'elire'\n\n    @allure.story(\"Полный цикл навигации по проектам QUBE\")\n    @pytest.mark.regression\n    @pytest.mark.smoke\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\"project_name\", [\"elire\", \"arisha\", \"cubix\"])\n    def test_full_navigation_cycle_on_map(self, main_page, project_name):\n        \"\"\"Тест полного цикла навигации: карта -> проект -> карта.\"\"\"\n        with allure.step(f\"Открываем страницу карты {project_name}\"):\n            main_page.open(route_type=\"map\")\n            main_page.check_map_loaded()\n            main_page.check_project_info_visible(project_name)\n    \n        with allure.step(f\"Тестируем навигацию для проекта {project_name.upper()}\"):\n            # Открываем проект\n>           main_page.open_project_page(project_name)\n\ntests/ui/qube/test_qube_map_projects.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.base_page.BasePage object at 0x7fcd67a61810>\nproject_name = 'elire'\n\n    def open_project_page(self, project_name: str):\n        \"\"\"Открыть страницу проекта.\"\"\"\n        # Находим проект по имени\n        project = None\n        for p in QubePageLocators.ALL_PROJECTS:\n            if p.PROJECT_NAME == project_name.lower():\n                project = p\n                break\n    \n        if not project:\n            available_projects = [p.PROJECT_NAME for p in QubePageLocators.ALL_PROJECTS]\n            raise ValueError(\n                f\"Неизвестный проект Qube: {project_name}. Доступные: {available_projects}\"\n            )\n    \n        project_url = self.project_url_template.format(project=project.PROJECT_NAME)\n        self.page.goto(project_url)\n>       self.wait_for_page_load()\n\npages/base_page.py:217: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.base_page.BasePage object at 0x7fcd67a61810>\n\n    def wait_for_page_load(self):\n        \"\"\"Ожидать загрузки страницы.\"\"\"\n>       self.page.wait_for_load_state(\"networkidle\")\n\npages/base_page.py:130: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle'\n\n    def wait_for_load_state(\n        self,\n        state: typing.Optional[\n            Literal[\"domcontentloaded\", \"load\", \"networkidle\"]\n        ] = None,\n        *,\n        timeout: typing.Optional[float] = None,\n    ) -> None:\n        \"\"\"Page.wait_for_load_state\n    \n        Returns when the required load state has been reached.\n    \n        This resolves when the page reaches a required load state, `load` by default. The navigation must have been\n        committed when this method is called. If current document has already reached the required state, resolves\n        immediately.\n    \n        **NOTE** Most of the time, this method is not needed because Playwright\n        [auto-waits before every action](https://playwright.dev/python/docs/actionability).\n    \n        **Usage**\n    \n        ```py\n        page.get_by_role(\\\"button\\\").click() # click triggers navigation.\n        page.wait_for_load_state() # the promise resolves after \\\"load\\\" event.\n        ```\n    \n        ```py\n        with page.expect_popup() as page_info:\n            page.get_by_role(\\\"button\\\").click() # click triggers a popup.\n        popup = page_info.value\n        # Wait for the \\\"DOMContentLoaded\\\" event.\n        popup.wait_for_load_state(\\\"domcontentloaded\\\")\n        print(popup.title()) # popup is ready to use.\n        ```\n    \n        Parameters\n        ----------\n        state : Union[\"domcontentloaded\", \"load\", \"networkidle\", None]\n            Optional load state to wait for, defaults to `load`. If the state has been already reached while loading current\n            document, the method resolves immediately. Can be one of:\n            - `'load'` - wait for the `load` event to be fired.\n            - `'domcontentloaded'` - wait for the `DOMContentLoaded` event to be fired.\n            - `'networkidle'` - **DISCOURAGED** wait until there are no network connections for at least `500` ms. Don't use\n              this method for testing, rely on web assertions to assess readiness instead.\n        timeout : Union[float, None]\n            Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The default value can\n            be changed by using the `browser_context.set_default_navigation_timeout()`,\n            `browser_context.set_default_timeout()`, `page.set_default_navigation_timeout()` or\n            `page.set_default_timeout()` methods.\n        \"\"\"\n    \n        return mapping.from_maybe_impl(\n>           self._sync(self._impl_obj.wait_for_load_state(state=state, timeout=timeout))\n        )\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py:9117: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Page url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle', timeout = None\n\n    async def wait_for_load_state(\n        self,\n        state: Literal[\"domcontentloaded\", \"load\", \"networkidle\"] = None,\n        timeout: float = None,\n    ) -> None:\n>       return await self._main_frame.wait_for_load_state(**locals_to_params(locals()))\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_page.py:576: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle', timeout = None\n\n    async def wait_for_load_state(\n        self,\n        state: Literal[\"domcontentloaded\", \"load\", \"networkidle\"] = None,\n        timeout: float = None,\n    ) -> None:\n>       return await self._wait_for_load_state_impl(state, timeout)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:273: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Frame name= url='https://virtualtours.qbd.ae/project/elire/area'>\nstate = 'networkidle', timeout = None\n\n    async def _wait_for_load_state_impl(\n        self, state: DocumentLoadState = None, timeout: float = None\n    ) -> None:\n        if not state:\n            state = \"load\"\n        if state not in (\"load\", \"domcontentloaded\", \"networkidle\", \"commit\"):\n            raise Error(\n                \"state: expected one of (load|domcontentloaded|networkidle|commit)\"\n            )\n        waiter = self._setup_navigation_waiter(\"wait_for_load_state\", timeout)\n    \n        if state in self._load_states:\n            waiter.log(f'  not waiting, \"{state}\" event already fired')\n            # TODO: align with upstream\n            waiter._fulfill(None)\n        else:\n    \n            def handle_load_state_event(actual_state: str) -> bool:\n                waiter.log(f'\"{actual_state}\" event fired')\n                return actual_state == state\n    \n            waiter.wait_for_event(\n                self._event_emitter,\n                \"loadstate\",\n                handle_load_state_event,\n            )\n>       await waiter.result()\nE       playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py:301: TimeoutError","steps":[{"name":"Открываем страницу карты elire","time":{"start":1757146098103,"stop":1757146103150,"duration":5047},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Тестируем навигацию для проекта ELIRE","time":{"start":1757146103150,"stop":1757146134572,"duration":31422},"status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n","statusTrace":"  File \"/home/runner/work/catalog_autotests/catalog_autotests/tests/ui/qube/test_qube_map_projects.py\", line 50, in test_full_navigation_cycle_on_map\n    main_page.open_project_page(project_name)\n  File \"/home/runner/work/catalog_autotests/catalog_autotests/pages/base_page.py\", line 217, in open_project_page\n    self.wait_for_page_load()\n  File \"/home/runner/work/catalog_autotests/catalog_autotests/pages/base_page.py\", line 130, in wait_for_page_load\n    self.page.wait_for_load_state(\"networkidle\")\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/sync_api/_generated.py\", line 9117, in wait_for_load_state\n    self._sync(self._impl_obj.wait_for_load_state(state=state, timeout=timeout))\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_sync_base.py\", line 115, in _sync\n    return task.result()\n           ^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_page.py\", line 576, in wait_for_load_state\n    return await self._main_frame.wait_for_load_state(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py\", line 273, in wait_for_load_state\n    return await self._wait_for_load_state_impl(state, timeout)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/playwright/_impl/_frame.py\", line 301, in _wait_for_load_state_impl\n    await waiter.result()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test_parameters::0","time":{"start":1757146134760,"stop":1757146135200,"duration":440},"status":"passed","steps":[],"attachments":[{"uid":"9aa77ecc77360c0e","name":"screenshot","source":"9aa77ecc77360c0e.png","type":"image/png","size":3441099}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},{"name":"new_context::0","time":{"start":1757146135200,"stop":1757146135217,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_artifacts_recorder::0","time":{"start":1757146135217,"stop":1757146135217,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_pw_artifacts_folder::0","time":{"start":1757146173825,"stop":1757146173825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1757146173826,"stop":1757146174400,"duration":574},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"playwright::0","time":{"start":1757146174402,"stop":1757146174410,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"environment","value":"prod"},{"name":"feature","value":"Qube - Карта, навигация и базовые роуты"},{"name":"severity","value":"critical"},{"name":"story","value":"Полный цикл навигации по проектам QUBE"},{"name":"tag","value":"smoke"},{"name":"tag","value":"regression"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"tests.ui.qube"},{"name":"suite","value":"test_qube_map_projects"},{"name":"subSuite","value":"TestQubeMapProjects"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"5251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.qube.test_qube_map_projects"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Operating System","value":"'Linux'"},{"name":"Platform","value":"'ubuntu-latest'"},{"name":"browser_name","value":"'firefox'"},{"name":"project_name","value":"'elire'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":7,"unknown":0,"total":8},"items":[{"uid":"43897920db63adfe","status":"passed","time":{"start":1757059646426,"stop":1757059656904,"duration":10478}},{"uid":"4b6c450cbccde7f8","status":"passed","time":{"start":1756973263834,"stop":1756973274506,"duration":10672}},{"uid":"a63a9c7d692aa21a","status":"passed","time":{"start":1756919093443,"stop":1756919104465,"duration":11022}},{"uid":"98e0033fdd99d2e3","status":"passed","time":{"start":1756886895666,"stop":1756886909210,"duration":13544}},{"uid":"169b2634eea80221","status":"passed","time":{"start":1756844251387,"stop":1756844262691,"duration":11304}},{"uid":"9bd0a04b2bb9765","status":"passed","time":{"start":1756800710132,"stop":1756800722473,"duration":12341}},{"uid":"5fe7e66d202dc9b7","status":"passed","time":{"start":1756756196262,"stop":1756756208497,"duration":12235}}]},"tags":["ui","regression","smoke"]},"source":"4e044510e3ad00c5.json","parameterValues":["'Linux'","'ubuntu-latest'","'firefox'","'elire'"]}