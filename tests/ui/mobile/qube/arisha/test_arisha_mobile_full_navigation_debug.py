import os
import time

import allure
import pytest


@allure.feature("Qube - –ü—Ä–æ–µ–∫—Ç Arisha (Mobile Debug)")
@allure.story("–ü–æ–ª–Ω–∞—è –º–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –¥–µ–±–∞–≥–æ–º –ª–æ–∫–∞—Ç–æ—Ä–æ–≤")
@pytest.mark.mobile
@pytest.mark.ui
@pytest.mark.regression
class TestArishaMobileFullNavigationDebug:
    """–ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–æ–ª–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ Arisha —Å –¥–µ–±–∞–≥–æ–º –ª–æ–∫–∞—Ç–æ—Ä–æ–≤."""

    @pytest.mark.mobile_device("iPhone 13 Pro")
    @allure.severity(allure.severity_level.CRITICAL)
    def test_arisha_mobile_full_navigation_debug(self, mobile_map_page):
        """–ü–æ–ª–Ω—ã–π –º–æ–±–∏–ª—å–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –¥–µ–±–∞–≥–æ–º –ª–æ–∫–∞—Ç–æ—Ä–æ–≤."""
        
        # –î–µ–±–∞–≥ —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–∫–∞—Ç–æ—Ä–æ–≤
        def debug_locators_on_page(step_name: str):
            """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–∫–∞—Ç–æ—Ä—ã –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ."""
            print(f"\nüîç –î–ï–ë–ê–ì –õ–û–ö–ê–¢–û–†–û–í: {step_name}")
            print(f"üìç URL: {mobile_map_page.get_current_url()}")
            
            # –°–ø–∏—Å–æ–∫ –ª–æ–∫–∞—Ç–æ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            locators_to_check = {
                "building_nav_button": mobile_map_page.project_locators.BUILDING_NAV_BUTTON,
                "floor_nav_button": mobile_map_page.project_locators.FLOOR_NAV_BUTTON,
                "apartment_nav_button": mobile_map_page.project_locators.APARTMENT_NAV_BUTTON,
                "building_1_button": mobile_map_page.project_locators.BUILDING_1_BUTTON,
                "building_2_button": mobile_map_page.project_locators.BUILDING_2_BUTTON,
                "floor_1_button": mobile_map_page.project_locators.FLOOR_1_BUTTON,
                "floor_2_button": mobile_map_page.project_locators.FLOOR_2_BUTTON,
                "floor_plan_apartments": mobile_map_page.project_locators.FLOOR_PLAN_APARTMENTS,
                "all_buttons": "button",
                "mobile_navigation": '[class*="_showOnMobiles_"]',
                "desktop_only": '[class*="_showOnDesktops_"]',
                "project_info": 'div.ant-card[class*="_projectInfo"]',
            }
            
            for locator_name, selector in locators_to_check.items():
                try:
                    elements = mobile_map_page.page.locator(selector)
                    count = elements.count()
                    visible_count = 0
                    
                    for i in range(count):
                        if elements.nth(i).is_visible():
                            visible_count += 1
                    
                    status = "‚úÖ" if visible_count > 0 else "‚ùå"
                    print(f"{status} {locator_name}: {count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤, {visible_count} –≤–∏–¥–∏–º—ã—Ö")
                    
                    if visible_count > 0 and locator_name in ["building_nav_button", "floor_nav_button", "apartment_nav_button"]:
                        # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                        first_element = elements.first
                        try:
                            classes = first_element.evaluate("el => el.className")
                            text = first_element.text_content()
                            print(f"   üìù –ö–ª–∞—Å—Å—ã: {classes}")
                            print(f"   üìù –¢–µ–∫—Å—Ç: {text}")
                        except:
                            pass
                            
                except Exception as e:
                    print(f"‚ö†Ô∏è {locator_name}: –û—à–∏–±–∫–∞ - {str(e)}")
            
            # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
            timestamp = int(time.time())
            screenshot_name = f"debug_{step_name.lower().replace(' ', '_')}_{timestamp}.png"
            screenshot_path = f"debug_screenshots/{screenshot_name}"
            os.makedirs("debug_screenshots", exist_ok=True)
            mobile_map_page.page.screenshot(path=screenshot_path, full_page=True)
            print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç: {screenshot_path}")
            
            allure.attach(
                f"Debug info for {step_name}\nURL: {mobile_map_page.get_current_url()}", 
                name=f"Debug - {step_name}",
                attachment_type=allure.attachment_type.TEXT
            )

        with allure.step("1. –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–æ–µ–∫—Ç—É Arisha"):
            mobile_map_page.open(route_type="map")
            debug_locators_on_page("–ö–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
            
            # –ö–ª–∏–∫–∞–µ–º –ø–æ –ø—Ä–æ–µ–∫—Ç—É Arisha (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä)
            mobile_map_page.click(mobile_map_page.project_locators.Arisha.MAP_LOCATOR)
            time.sleep(2)  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É
            debug_locators_on_page("–ü—Ä–æ–µ–∫—Ç Arisha –≤—ã–±—Ä–∞–Ω")
            
            # –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "Explore Project" (–º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
            mobile_map_page.click('[data-test-id="map-project-point-button-mobile-arisha"]')
            time.sleep(2)
            debug_locators_on_page("Explore Project –Ω–∞–∂–∞—Ç")

        with allure.step("2. –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Building Navigation"):
            debug_locators_on_page("–ü–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –∑–¥–∞–Ω–∏—è")
            
            try:
                # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∑–¥–∞–Ω–∏—è–º
                building_nav = mobile_map_page.page.locator(mobile_map_page.project_locators.BUILDING_NAV_BUTTON)
                if building_nav.is_visible():
                    mobile_map_page.click(mobile_map_page.project_locators.BUILDING_NAV_BUTTON)
                    print("‚úÖ Building nav button –Ω–∞–π–¥–µ–Ω –∏ –∫–ª–∏–∫–Ω—É—Ç")
                else:
                    print("‚ùå Building nav button –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∏–¥–∏–º")
                    
                debug_locators_on_page("–ü–æ—Å–ª–µ –∫–ª–∏–∫–∞ –Ω–∞ Building Nav")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ Building Nav: {e}")
                debug_locators_on_page("–û—à–∏–±–∫–∞ Building Nav")

        with allure.step("3. –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å –∑–¥–∞–Ω–∏–µ 1"):
            try:
                building_1 = mobile_map_page.page.locator(mobile_map_page.project_locators.BUILDING_1_BUTTON)
                if building_1.is_visible():
                    mobile_map_page.click(mobile_map_page.project_locators.BUILDING_1_BUTTON)
                    print("‚úÖ Building 1 button –Ω–∞–π–¥–µ–Ω –∏ –∫–ª–∏–∫–Ω—É—Ç")
                    
                    # –ñ–¥–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
                    try:
                        mobile_map_page.page.wait_for_url("**/building/1", timeout=10000)
                        current_url = mobile_map_page.get_current_url()
                        print(f"‚úÖ URL –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ –∑–¥–∞–Ω–∏–µ 1: {current_url}")
                        allure.attach(f"URL –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∑–¥–∞–Ω–∏—è 1: {current_url}", name="Building 1 URL")
                    except:
                        print("‚ö†Ô∏è URL –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ building/1")
                        
                else:
                    print("‚ùå Building 1 button –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∏–¥–∏–º")
                    
                debug_locators_on_page("–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∑–¥–∞–Ω–∏—è 1")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ Building 1: {e}")
                debug_locators_on_page("–û—à–∏–±–∫–∞ Building 1")

        with allure.step("4. –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Floor Navigation"):
            try:
                floor_nav = mobile_map_page.page.locator(mobile_map_page.project_locators.FLOOR_NAV_BUTTON)
                if floor_nav.is_visible():
                    mobile_map_page.click(mobile_map_page.project_locators.FLOOR_NAV_BUTTON)
                    print("‚úÖ Floor nav button –Ω–∞–π–¥–µ–Ω –∏ –∫–ª–∏–∫–Ω—É—Ç")
                else:
                    print("‚ùå Floor nav button –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∏–¥–∏–º")
                    
                debug_locators_on_page("–ü–æ—Å–ª–µ –∫–ª–∏–∫–∞ –Ω–∞ Floor Nav")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ Floor Nav: {e}")
                debug_locators_on_page("–û—à–∏–±–∫–∞ Floor Nav")

        with allure.step("5. –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å —ç—Ç–∞–∂ 1"):
            try:
                floor_1 = mobile_map_page.page.locator(mobile_map_page.project_locators.FLOOR_1_BUTTON)
                if floor_1.is_visible():
                    mobile_map_page.click(mobile_map_page.project_locators.FLOOR_1_BUTTON)
                    print("‚úÖ Floor 1 button –Ω–∞–π–¥–µ–Ω –∏ –∫–ª–∏–∫–Ω—É—Ç")
                    
                    # –ñ–¥–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è URL
                    try:
                        mobile_map_page.page.wait_for_url("**/floor/1/1", timeout=10000)
                        current_url = mobile_map_page.get_current_url()
                        print(f"‚úÖ URL –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ —ç—Ç–∞–∂ 1: {current_url}")
                        allure.attach(f"URL –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —ç—Ç–∞–∂–∞ 1: {current_url}", name="Floor 1 URL")
                    except:
                        print("‚ö†Ô∏è URL –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ floor/1/1")
                        
                else:
                    print("‚ùå Floor 1 button –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –≤–∏–¥–∏–º")
                    
                debug_locators_on_page("–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —ç—Ç–∞–∂–∞ 1")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ Floor 1: {e}")
                debug_locators_on_page("–û—à–∏–±–∫–∞ Floor 1")

        with allure.step("6. –ò—â–µ–º –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –Ω–∞ –ø–ª–∞–Ω–µ —ç—Ç–∞–∂–∞"):
            try:
                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–∞ —ç—Ç–∞–∂–∞
                mobile_map_page.page.wait_for_selector(
                    mobile_map_page.project_locators.FLOOR_PLAN_APARTMENTS, timeout=10000
                )
                
                apartment_elements = mobile_map_page.page.locator(
                    mobile_map_page.project_locators.FLOOR_PLAN_APARTMENTS
                )
                apartment_count = apartment_elements.count()
                print(f"üìä –ù–∞–π–¥–µ–Ω–æ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –Ω–∞ —ç—Ç–∞–∂–µ: {apartment_count}")
                allure.attach(
                    f"–ù–∞–π–¥–µ–Ω–æ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤ –Ω–∞ —ç—Ç–∞–∂–µ: {apartment_count}", name="Apartment Count"
                )
                
                debug_locators_on_page("–ü–ª–∞–Ω —ç—Ç–∞–∂–∞ –∑–∞–≥—Ä—É–∂–µ–Ω")
                
                if apartment_count > 0:
                    with allure.step("7. –ü—ã—Ç–∞–µ–º—Å—è –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç"):
                        try:
                            apartment_clicked = mobile_map_page.click_available_apartment()
                            if apartment_clicked:
                                print("‚úÖ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω")
                                debug_locators_on_page("–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –≤—ã–±—Ä–∞–Ω")
                            else:
                                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç")
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞: {e}")
                else:
                    print("‚ùå –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –Ω–∞ –ø–ª–∞–Ω–µ —ç—Ç–∞–∂–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤: {e}")
                debug_locators_on_page("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤")

        with allure.step("8. –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
            final_url = mobile_map_page.get_current_url()
            print(f"üèÅ –§–∏–Ω–∞–ª—å–Ω—ã–π URL: {final_url}")
            allure.attach(f"–§–∏–Ω–∞–ª—å–Ω—ã–π URL: {final_url}", name="Final URL")
            
            debug_locators_on_page("–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
            if "/apartment/" in final_url or "/unit/" in final_url:
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ—à–ª–∏ –¥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞")
            else:
                print(f"‚ö†Ô∏è –ù–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞. URL: {final_url}")
